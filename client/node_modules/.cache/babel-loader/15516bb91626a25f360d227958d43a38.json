{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hegde\\\\Desktop\\\\WebTech-Project-main\\\\client\\\\src\\\\components\\\\screens\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst Signup = () => {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n  useEffect(() => {\n    if (url) {\n      uploadFields();\n    }\n  }, [url]);\n\n  const uploadPic = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"img-cloud\"); //this is the name of our upload preset on cloudinary\n\n    data.append(\"cloud_name\", \"insta-clone-cloud\");\n    fetch(\"https://api.cloudinary.com/v1_1/insta-clone-cloud/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const uploadFields = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"invalid email\",\n        classes: \"#b71c1c red darken-4\"\n      });\n      return;\n    }\n\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email,\n        pic: url\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#b71c1c red darken-4\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#76ff03 light-green accent-4\"\n        });\n        history.push('/signin');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const PostData = () => {\n    if (image) {\n      uploadPic();\n    } else {\n      uploadFields();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-field input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn waves-effect waves-light #e57373 red lighten-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-path-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-path validate\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #e57373 red lighten-2\",\n        onClick: () => PostData(),\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./signin\",\n          children: \"Account already exists?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"clxyugc4EVSQEmV7CX+9mdY+rsM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/hegde/Desktop/WebTech-Project-main/client/src/components/screens/Signup.js"],"names":["React","useState","useEffect","Link","useHistory","M","Signup","history","name","setName","password","setPassword","email","setEmail","image","setImage","url","setUrl","undefined","uploadFields","uploadPic","data","FormData","append","fetch","method","body","then","res","json","catch","err","console","log","test","toast","html","classes","headers","JSON","stringify","pic","error","message","push","PostData","e","target","value","files"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst Signup = ()=>{\n\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n\n    useEffect(()=>{\n        if(url){\n            uploadFields()\n        }\n    },[url])\n    const uploadPic = ()=>{\n        \n            const data = new FormData()\n            data.append(\"file\", image)\n            data.append(\"upload_preset\", \"img-cloud\")//this is the name of our upload preset on cloudinary\n            data.append(\"cloud_name\", \"insta-clone-cloud\")\n            fetch(\"https://api.cloudinary.com/v1_1/insta-clone-cloud/image/upload\",{\n                method:\"post\",\n                body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n    const uploadFields = ()=>{\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"invalid email\",classes:\"#b71c1c red darken-4\"})\n            return\n        }\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html: data.error, classes:\"#b71c1c red darken-4\"})\n            }\n            else{\n                M.toast({html: data.message, classes:\"#76ff03 light-green accent-4\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n\n    }\n    const PostData = ()=>{\n        if(image){\n            uploadPic()\n        }else{\n            uploadFields()\n        }\n        \n    }\n    return(\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n            <h3>Sign-up</h3>\n            <input\n            type = \"text\"\n            placeholder=\"Name\"\n            value = {name}\n            onChange = {(e)=>setName(e.target.value)}\n            />\n            <input\n            type = \"text\"\n            placeholder=\"email\"\n            value = {email}\n            onChange = {(e)=>setEmail(e.target.value)}\n            />\n            <input\n            type = \"password\"\n            placeholder=\"password\"\n            value = {password}\n            onChange={(e)=>setPassword(e.target.value)}\n            />\n            <div className=\"file-field input-field\">\n            <div className=\"btn waves-effect waves-light #e57373 red lighten-2\">\n                <span>Upload Picture</span>\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\"/>\n            </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #e57373 red lighten-2\"\n            onClick={()=>PostData()}>\n            Sign up\n            </button>\n            <h6>\n                <Link to=\"./signin\">Account already exists?</Link>\n            </h6>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}