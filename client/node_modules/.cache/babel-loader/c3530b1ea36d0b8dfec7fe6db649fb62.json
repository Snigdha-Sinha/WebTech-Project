{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hegde\\\\Desktop\\\\WT Project\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { UserContext } from '../../App';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletePost = postid => {\n    fetch(`/deletepost/${postid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.filter(item => {\n        return item._id !== result._id;\n      });\n      setData(newData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\",\n            children: item.postedBy.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), \" \", item.postedBy._id == state._id && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              float: \"right\"\n            },\n            onClick: () => deletePost(item._id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"favorite_border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }, this), item.comments.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"500\"\n                },\n                children: record.postedBy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 66\n              }, this), \" \", record.text]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 45\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              makeComment(e.target[0].value, item._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"z0uLlaNDWADL4hg83y8VILQAZBQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/hegde/Desktop/WT Project/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","useCallback","UserContext","Link","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","posts","likePost","id","method","body","JSON","stringify","postId","newData","map","item","_id","catch","err","console","log","unlikePost","makeComment","text","deletePost","postid","Authorization","filter","postedBy","name","float","photo","likes","includes","color","length","title","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,WAAhD,QAAkE,OAAlE;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACS,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBR,UAAU,CAACE,WAAD,CAApC;AACAH,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,KAAK,CAAC,UAAD,EAAY;AACbC,MAAAA,OAAO,EAAC;AACJ,yBAAgB,YAAUC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADtB;AADK,KAAZ,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJb,EAKCF,IALD,CAKMG,MAAM,IAAE;AACVV,MAAAA,OAAO,CAACU,MAAM,CAACC,KAAR,CAAP;AACH,KAPD;AAQH,GATQ,EASP,EATO,CAAT;;AAWA,QAAMC,QAAQ,GAAIC,EAAD,IAAM;AACnBV,IAAAA,KAAK,CAAC,OAAD,EAAS;AACVW,MAAAA,MAAM,EAAC,KADG;AAEVV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,YAAUC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFtB,OAFE;AAMVS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANK,KAAT,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV,YAAMS,OAAO,GAAGpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AAC3B,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPe,CAAhB;AAQArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KApBD,EAoBGI,KApBH,CAoBSC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAtBD;AAuBH,GAxBD;;AA0BA,QAAMG,UAAU,GAAId,EAAD,IAAM;AACrBV,IAAAA,KAAK,CAAC,SAAD,EAAW;AACZW,MAAAA,MAAM,EAAC,KADK;AAEZV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,YAAUC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFtB,OAFI;AAMZS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MAAM,EAACL;AADS,OAAf;AANO,KAAX,CAAL,CASGN,IATH,CASQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,MAAM,IAAE;AACV,YAAMS,OAAO,GAAGpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AAC3B,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPe,CAAhB;AAQArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KApBD,EAoBGI,KApBH,CAoBSC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAtBD;AAuBH,GAxBD;;AA0BA,QAAMI,WAAW,GAAG,CAACC,IAAD,EAAOX,MAAP,KAAgB;AAChCf,IAAAA,KAAK,CAAC,UAAD,EAAY;AACbW,MAAAA,MAAM,EAAC,KADM;AAEbV,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAgB,YAAUC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFtB,OAFK;AAMbS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,QAAAA,MADgB;AAEhBW,QAAAA;AAFgB,OAAf;AANQ,KAAZ,CAAL,CAUGtB,IAVH,CAUQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAVb,EAWCF,IAXD,CAWMG,MAAM,IAAE;AACV,YAAMS,OAAO,GAAGpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AAC3B,YAAGA,IAAI,CAACC,GAAL,IAAUZ,MAAM,CAACY,GAApB,EAAwB;AACpB,iBAAOZ,MAAP;AACH,SAFD,MAGI;AACA,iBAAOW,IAAP;AACH;AACJ,OAPe,CAAhB;AAQArB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KArBD,EAqBGI,KArBH,CAqBSC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAvBD;AAwBH,GAzBD;;AA2BA,QAAMM,UAAU,GAAIC,MAAD,IAAU;AACzB5B,IAAAA,KAAK,CAAE,eAAc4B,MAAO,EAAvB,EAAyB;AAC1BjB,MAAAA,MAAM,EAAC,QADmB;AAE1BV,MAAAA,OAAO,EAAC;AACJ4B,QAAAA,aAAa,EAAC,YAAU3B,YAAY,CAACC,OAAb,CAAqB,KAArB;AADpB;AAFkB,KAAzB,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMG,MAAM,IAAE;AACVe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,YAAMS,OAAO,GAAGpB,IAAI,CAACkC,MAAL,CAAYZ,IAAI,IAAE;AAC9B,eAAOA,IAAI,CAACC,GAAL,KAAaZ,MAAM,CAACY,GAA3B;AACH,OAFe,CAAhB;AAGAtB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACH,KAZD;AAaH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEQpB,IAAI,CAACqB,GAAL,CAASC,IAAI,IAAE;AACX,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA,kCAAI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAEA,IAAI,CAACa,QAAL,CAAcZ,GAAd,KAAsBrB,KAAK,CAACqB,GAA5B,GAAgC,cAAYD,IAAI,CAACa,QAAL,CAAcZ,GAA1D,GAA+D,UAAzE;AAAA,sBAAwFD,IAAI,CAACa,QAAL,CAAcC;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAAJ,OAAwHd,IAAI,CAACa,QAAL,CAAcZ,GAAd,IAAqBrB,KAAK,CAACqB,GAA3B,iBACrH;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AACpCc,cAAAA,KAAK,EAAC;AAD8B,aAArC;AAGH,YAAA,OAAO,EAAE,MAAIN,UAAU,CAACT,IAAI,CAACC,GAAN,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAED,IAAI,CAACgB;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAYI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBACChB,IAAI,CAACiB,KAAL,CAAWC,QAAX,CAAoBtC,KAAK,CAACqB,GAA1B,iBAED;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAACkB,cAAAA,KAAK,EAAC;AAAP,aAArC;AACA,YAAA,OAAO,EAAE,MAAI;AAACb,cAAAA,UAAU,CAACN,IAAI,CAACC,GAAN,CAAV;AAAqB,aADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,gBAMD;AAAG,YAAA,SAAS,EAAC,gBAAb;AACA,YAAA,OAAO,EAAE,MAAI;AAACV,cAAAA,QAAQ,CAACS,IAAI,CAACC,GAAN,CAAR;AAAmB,aADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA,eAWQ;AAAA,uBAAKD,IAAI,CAACiB,KAAL,CAAWG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXR,eAYQ;AAAA,sBAAKpB,IAAI,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAZR,eAaQ;AAAA,sBAAIrB,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,kBAbR,EAeYM,IAAI,CAACsB,QAAL,CAAcvB,GAAd,CAAkBwB,MAAM,IAAE;AACtB,gCACA;AAAA,sCAAqB;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,UAAU,EAAC;AAAZ,iBAAb;AAAA,0BAAkCD,MAAM,CAACV,QAAP,CAAgBC;AAAlD;AAAA;AAAA;AAAA;AAAA,sBAArB,OAAqFS,MAAM,CAACf,IAA5F;AAAA,eAASe,MAAM,CAACtB,GAAhB;AAAA;AAAA;AAAA;AAAA,oBADA;AAGH,WAJD,CAfZ,eAqBQ;AAAM,YAAA,QAAQ,EAAGwB,CAAD,IAAK;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACAnB,cAAAA,WAAW,CAACkB,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAoB5B,IAAI,CAACC,GAAzB,CAAX;AACH,aAHD;AAAA,mCAII;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBArBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA,SAAqCD,IAAI,CAACC,GAA1C;AAAA;AAAA;AAAA;AAAA,cADJ;AA2CH,KA5CD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CAjKD;;GAAMxB,I;;KAAAA,I;AAmKN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect, useContext, useCallback} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = ()=>{\r\n    const [data, setData] = useState([])\r\n    const {state, dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text, postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            {item.likes.includes(state._id)\r\n                            ?\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}\r\n                            onClick={()=>{unlikePost(item._id)}}\r\n                            >favorite</i>\r\n                            :\r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >favorite_border</i>\r\n                            }\r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h6>{item.title}</h6>\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                        item.comments.map(record=>{\r\n                                            return(\r\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <form onSubmit={(e)=>{\r\n                                        e.preventDefault()\r\n                                        makeComment(e.target[0].value, item._id)\r\n                                    }}>\r\n                                        <input type=\"text\" placeholder=\"add a comment\"/>\r\n                                    </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}