{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hegde\\\\Desktop\\\\WT Project\\\\client\\\\src\\\\components\\\\screens\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst Signup = () => {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"invalid email\",\n        classes: \"#b71c1c red darken-4\"\n      });\n      return;\n    }\n\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#b71c1c red darken-4\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#76ff03 light-green accent-4\"\n        });\n        history.push('/signin');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #e57373 red lighten-2\",\n        onClick: () => PostData(),\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./signin\",\n          children: \"Account already exists?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"umFmY+MRIhR2bErO7D4gSvJUDlE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/hegde/Desktop/WT Project/client/src/components/screens/Signup.js"],"names":["React","useState","Link","useHistory","M","Signup","history","name","setName","password","setPassword","email","setEmail","PostData","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","message","push","catch","err","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = ()=>{\r\n\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    \r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#b71c1c red darken-4\"})\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error, classes:\"#b71c1c red darken-4\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message, classes:\"#76ff03 light-green accent-4\"})\r\n                history.push('/signin')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h3>Sign-up</h3>\r\n            <input\r\n            type = \"text\"\r\n            placeholder=\"Name\"\r\n            value = {name}\r\n            onChange = {(e)=>setName(e.target.value)}\r\n            />\r\n            <input\r\n            type = \"text\"\r\n            placeholder=\"email\"\r\n            value = {email}\r\n            onChange = {(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type = \"text\"\r\n            placeholder=\"password\"\r\n            value = {password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #e57373 red lighten-2\"\r\n            onClick={()=>PostData()}>\r\n            Sign up\r\n            </button>\r\n            <h6>\r\n                <Link to=\"./signin\">Account already exists?</Link>\r\n            </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}